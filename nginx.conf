# 添加 Nginx 缓存和压缩配置
server {
    server_name nezha.yhc.so;
    # 启用 gzip 压缩
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # 缓存控制
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|webp)$ {
        expires 7d;
        add_header Cache-Control "public, no-transform";
    }
}

# 在 http 块中添加 gzip 配置
http {
    # 启用 gzip 压缩
    gzip on;
    # 启用在代理请求时压缩
    gzip_proxied any;
    # 压缩级别 (1-9)，建议使用 4-6，这里使用 6
    gzip_comp_level 6;
    # 压缩的最小文件大小
    gzip_min_length 1000;
    # 压缩缓冲区大小
    gzip_buffers 16 8k;
    # 压缩的 HTTP 版本
    gzip_http_version 1.1;
    # 要压缩的 MIME 类型
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/xml+rss
        application/x-httpd-php
        image/svg+xml;
    
    # 禁止对图片进行 gzip 压缩
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";

    # 缓存设置
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff2)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # 对 API 请求的缓存设置
    location /api/ {
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        proxy_cache_valid 200 5m;  # 成功的响应缓存 5 分钟
        add_header X-Cache-Status $upstream_cache_status;
    }

    # 静态文件服务优化
    location /static/ {
        expires max;
        add_header Cache-Control "public, immutable";
    }
} 